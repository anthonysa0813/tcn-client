
import { Input } from "@nextui-org/react";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { ChangeEvent, FormEvent, FormEventHandler, MouseEvent, useEffect, useState } from "react";
import Navbar from "../../components/menu/Navbar";
import styles from "../../styles/users/Register.module.css";

const RegisterPage: NextPage = ({data}: any) => {
    const [formValues, setFormValues] = useState({
        name: "", 
        surnames: "",
        email: "",
        callingCode: "", 
        country: "", 
        phone: "",
        message: "",
        cv: "",
        typeJob: "",
    })
    const {name, surnames, email, callingCode, country, message, cv, typeJob, phone} = formValues;

    const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
        setFormValues({
            ...formValues,
            [e.target.name]: e.target.value
        });
       console.log(e.target.value);
    }

    const handleOption = (e: ChangeEvent<HTMLSelectElement>) => {
        setFormValues({
            ...formValues,
            callingCode: data.callingCode[e.target.value],
            country: data.countriesNames[e.target.value]
        });
    }

    const readInputTypeFile = (e: ChangeEvent<HTMLInputElement>) => {
        console.log(e.target.files);
    }


  

  return (
    <>
      <Head>
        <title>Contact Bpo | registrarse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className={styles.main}>
        <div className="wrapper">
            <h1>Registrarse</h1>
          <form className={styles.formContainer}>
            <div className={styles.field}>
                <label>
                    Nombres:
                    <input type="text" name="name" value={name} onChange={handleChange}/>
                </label>
            </div>
            <div className={styles.field}>
                <label htmlFor="">
                    Apellidos:
                    <input type="text" name="surnames" value={surnames} onChange={handleChange}/>
                </label>
            </div>
            <div className={styles.field}>
                <label htmlFor="">
                    Email:
                    <input type="email" name="email" value={email} onChange={handleChange}/>
                </label>
            </div>
            <div className={styles.field}>
                <label htmlFor="">
                    Número de contacto:
                    <input type="number" name="phone" value={phone} onChange={handleChange}/>
                </label>
            </div>
            
            <div className={styles.field}>
                <label htmlFor="">
                    País:
                <select name="callingCode" onChange={handleOption} className={styles.select} >
                    {
                        Object.keys(data.countriesNames).map( (country: any, index) => {
                            return (
                                <option key={index}  value={country} >{data.countriesNames[country]}</option>
                            )
                        }) 
                    }
                </select>
                </label>
            </div>
            <div className={styles.field}>
                <label htmlFor="">
                    CV:
                    <input type="file" name="cv" onChange={readInputTypeFile} />
                </label>
            </div>
            <h5>¿En qué modo le gustaría trabajar?</h5>
            <div className={styles.optionsJob}>
                <div className="field">
                    <label>
                    <input type="radio" value="PRESENCIAL" name="typeJob" id="typeJob" onChange={handleChange} />
                    Presencial
                    </label>
                </div>
                
                <div className="field">
                    <label>
                    <input type="radio" value="REMOTO" name="typeJob" id="typeJob"  onChange={handleChange}/>
                    Remoto
                    </label>
                </div>
                
                <div className="field">
                    <label>
                    <input type="radio" value="HIBRIDO" name="typeJob" id="typeJob" onChange={handleChange} />
                        Híbrido
                    </label>
                </div>
            </div>
            <div className={styles.fieldText}>
                <label htmlFor="">
                    Dejanós un mensaje:
                    <textarea name="message" onChange={handleChange} id=""></textarea>
                </label>
            </div>
            <div className={styles.buttonField}>
                <button className={styles.register}>Registrarse</button>
                <button className={styles.account}>Ya tengo cuenta</button>
            </div>
          </form>
        </div>
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (ctx) => {
    // data de nombres de paises
    const res = await fetch("http://country.io/names.json");
    const data = await res.json();
    // data de código telefónico
    const resCode = await fetch("http://country.io/phone.json");
    const dataCode = await resCode.json();

    return {
        props: {
            data: {
                countriesNames: data,
                callingCode: dataCode
            }
        }
    }
}

export default RegisterPage;
